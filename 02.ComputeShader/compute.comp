// Copyright (C) 2018-2020 - DevSH Graphics Programming Sp. z O.O.
// This file is part of the "Nabla Engine".
// For conditions of distribution and use, see copyright notice in nabla.h

#version 450

#pragma shader_stage(compute)

layout (local_size_x = 16, local_size_y = 16) in;

#include <nbl/builtin/glsl/utils/surface_transform.glsl>

layout (push_constant) uniform pushConstants
{
	uvec2 imgSize;
	uint swapchainTransform;
} u_pushConstants;

layout (set = 0, binding = 0, rgba8) uniform writeonly image2D outImage;
layout (set = 0, binding = 1, rgba8) uniform readonly image2D inImage;

void main()
{
	if (all(lessThan(gl_GlobalInvocationID.xy, u_pushConstants.imgSize)))
	{
		ivec2 postTransformUv = nbl_glsl_surface_transform_applyToScreenSpaceCoordinate(u_pushConstants.swapchainTransform, ivec2(gl_GlobalInvocationID.xy), ivec2(u_pushConstants.imgSize));
		vec4 outColor = vec4(vec2(postTransformUv) / vec2(u_pushConstants.imgSize), 0.0, 1.f);
		imageStore(outImage, ivec2(gl_GlobalInvocationID.xy), outColor);
	}
}