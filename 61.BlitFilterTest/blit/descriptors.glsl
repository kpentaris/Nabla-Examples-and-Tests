#ifndef _NBL_GLSL_BLIT_DESCRIPTORS_INCLUDED_
#define _NBL_GLSL_BLIT_DESCRIPTORS_INCLUDED_

#ifndef _NBL_GLSL_BLIT_DESCRIPTOR_SET_DEFINED_
#define _NBL_GLSL_BLIT_DESCRIPTOR_SET_DEFINED_ 0
#endif

#ifndef _NBL_GLSL_BLIT_IN_DESCRIPTOR_DEFINED_
#define _NBL_GLSL_BLIT_IN_DESCRIPTOR_DEFINED_ nbl_glsl_blit_inImage

	#ifndef _NBL_GLSL_BLIT_IN_BINDING_DEFINED_
		#define _NBL_GLSL_BLIT_IN_BINDING_DEFINED_ 0
	#endif

	#ifndef _NBL_GLSL_BLIT_IN_SAMPLER_TYPE_
		#error _NBL_GLSL_BLIT_IN_SAMPLER_TYPE_ must be defined to any of sampler1D/sampler2D/sampler3D
	#endif

	layout(set = _NBL_GLSL_BLIT_DESCRIPTOR_SET_DEFINED_, binding = _NBL_GLSL_BLIT_IN_BINDING_DEFINED_) uniform _NBL_GLSL_BLIT_IN_SAMPLER_TYPE_ _NBL_GLSL_BLIT_IN_DESCRIPTOR_DEFINED_;

#endif

#ifndef _NBL_GLSL_BLIT_OUT_DESCRIPTOR_DEFINED_
#define _NBL_GLSL_BLIT_OUT_DESCRIPTOR_DEFINED_ nbl_glsl_blit_outImage

	#ifndef _NBL_GLSL_BLIT_OUT_BINDING_DEFINED_
		#define _NBL_GLSL_BLIT_OUT_BINDING_DEFINED_ 1
	#endif

	#ifndef _NBL_GLSL_BLIT_OUT_IMAGE_FORMAT_
		#error _NBL_GLSL_BLIT_OUT_IMAGE_FORMAT_ must be defined to a valid storage image format
	#endif

	#ifndef _NBL_GLSL_BLIT_OUT_IMAGE_TYPE_
		#error _NBL_GLSL_BLIT_OUT_IMAGE_TYPE_ must be defined to any of (u)image1D/(u)image2D/(u)image3D
	#endif

	layout(set = _NBL_GLSL_BLIT_DESCRIPTOR_SET_DEFINED_, binding = _NBL_GLSL_BLIT_OUT_BINDING_DEFINED_, _NBL_GLSL_BLIT_OUT_IMAGE_FORMAT_) uniform writeonly _NBL_GLSL_BLIT_OUT_IMAGE_TYPE_ _NBL_GLSL_BLIT_OUT_DESCRIPTOR_DEFINED_;

#endif

#ifndef _NBL_GLSL_BLIT_WEIGHTS_DESCRIPTOR_DEFINED_
#define _NBL_GLSL_BLIT_WEIGHTS_DESCRIPTOR_DEFINED_ nbl_glsl_blit_weights

	#ifndef _NBL_GLSL_BLIT_WEIGHTS_BINDING_DEFINED_
	#define _NBL_GLSL_BLIT_WEIGHTS_BINDING_DEFINED_ 2
	#endif

	// Todo(achal): I don't think I need row_major here
	layout(set = _NBL_GLSL_BLIT_DESCRIPTOR_SET_DEFINED_, binding = _NBL_GLSL_BLIT_WEIGHTS_BINDING_DEFINED_, std140, row_major) uniform nbl_glsl_blit_Weights
	{
		// Todo(achal): Put max3DWindowPixelCount*channelCount here
		float data[1024 * 1024];
	} _NBL_GLSL_BLIT_WEIGHTS_DESCRIPTOR_DEFINED_;

#endif

#ifndef _NBL_GLSL_BLIT_ALPHA_HISTOGRAM_DESCRIPTOR_DEFINED_
#define _NBL_GLSL_BLIT_ALPHA_HISTOGRAM_DESCRIPTOR_DEFINED_ nbl_glsl_blit_alphaHistogram

	#ifndef _NBL_GLSL_BLIT_ALPHA_HISTOGRAM_BINDING_DEFINED_
	#define _NBL_GLSL_BLIT_ALPHA_HISTOGRAM_BINDING_DEFINED_ 3
	#endif

	layout(set = _NBL_GLSL_BLIT_DESCRIPTOR_SET_DEFINED_, binding = _NBL_GLSL_BLIT_ALPHA_HISTOGRAM_BINDING_DEFINED_) buffer coherent nbl_glsl_blit_AlphaHistogram
	{
		uint data[];
	} _NBL_GLSL_BLIT_ALPHA_HISTOGRAM_DESCRIPTOR_DEFINED_;

#endif

#endif
